#include "ADS1118.h"

uint8_t ADS1118_Config[2] = {0};
uint8_t ADS1118_Data[2] = {0};
void ADS1118_init(void) {
	ADS1118_Config[0] = (((((SS << 3) + MUX) << 3) + PGA) << 1) + MODE;
	ADS1118_Config[1] = (((((((DR << 1) + TS_MODE) << 1) + PULLUP_EN) << 2) + NOP) << 1) + 0;
}
int ADS1118_GetData(void) {

	int i = 0;
	HAL_GPIO_WritePin(SPI2_CS_GPIO_Port, SPI2_CS_Pin, GPIO_PIN_RESET);
	HAL_Delay(2);
	while(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_14) == GPIO_PIN_SET && i < 50000) i++;
	HAL_SPI_TransmitReceive(&hspi2, ADS1118_Config, ADS1118_Data, 2, 0xff);
	//HAL_SPI_Transmit(&hspi2, ADS1118_Config, 2, 0xff);
	HAL_Delay(2);
	//HAL_GPIO_WritePin(SPI2_CS_GPIO_Port, SPI2_CS_Pin, GPIO_PIN_SET);

	HAL_Delay(15);
	int Value1 = ((int)ADS1118_Data[0] << 8) + ADS1118_Data[1];

	int j = 0;
	//HAL_GPIO_WritePin(SPI2_CS_GPIO_Port, SPI2_CS_Pin, GPIO_PIN_RESET);
	HAL_Delay(2);
	while(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_14) == GPIO_PIN_SET && j < 50000) j++;
	HAL_SPI_TransmitReceive(&hspi2, ADS1118_Config, ADS1118_Data, 2, 0xff);
	//HAL_SPI_Transmit(&hspi2, ADS1118_Config, 2, 0xff);
	HAL_Delay(2);
	HAL_GPIO_WritePin(SPI2_CS_GPIO_Port, SPI2_CS_Pin, GPIO_PIN_SET);

	HAL_Delay(3);

	int Value = ((int)ADS1118_Data[0] << 8) + ADS1118_Data[1];
	return Value;
}
